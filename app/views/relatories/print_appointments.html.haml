.no-print
  = image_tag("logo.png", class: "logo-default");
  .relatory-header
    .relatory-header__inner
      .no-print
        %h3 Considerações/Parecer do relatório:

        .formatable
        -# %button.button.button--green.fancy-link.fancy-link--white.no-print{onclick: "window.print();"} Terminei de escrever!
        %button.button.button--green.fancy-link.fancy-link--white.no-print{onclick: "window.print();"}= icon('fas', 'print', 'Imprimir')

- if not @appointments.empty?
  %table
    %thead
      %tr
        %td
          .header-space  
    %tbody
      %tr
        %td
          .card.card--with-border{style: "text-align: left; max-width: 90%; margin-bottom: 30px"}
            %h1.title.title--thin Relatório de Atendimentos
            %div{style: "display: flex; align-items: center"}
              %strong{style: "min-width: 135px"} Preenchido por:
              %input.fancy-form__input{type: "text", style: "margin: 0 0 0 15px"}

            %div{style: "display: flex; align-items: center"}
              %strong Data:
              %input.fancy-form__input{type: "text", style: "margin: 0 0 0 15px"}

            %div{style: "display: flex; align-items: center"}
              %strong Local:
              %input.fancy-form__input{type: "text", style: "margin: 0 0 0 15px"}

            #content

          %hr

          .content
            - @appointments.each do |appointment|
              = ("<strong>Instituição: </strong>").html_safe + appointment.school.name
              %br
              = ("<strong>Data do atendimento: </strong>").html_safe + l(appointment.appointment_date) + " às " + appointment.appointment_time
              %br
              %br
              - if appointment.reason.present?
                %strong Motivo da solicitação:
                %text{style: "text-align: justify"}= appointment.reason

              - if appointment.observations.present?
                %strong Observações gerais:
                %text{style: "text-align: justify"}= appointment.observations

              - if appointment.action_call.present?
                %strong Chamada de Ação:
                %text{style: "text-align: justify"}= appointment.action_call

              - if appointment.redirecting.present?
                %strong Direcionamento aos Educadores/Coordenação:
                %text{style: "text-align: justify"}= appointment.redirecting

              - if appointment.spontaneous.present?
                %strong Atendimento Espontâneo?:
                %text{style: "text-align: justify"}= human_boolean(appointment.spontaneous)

              - if appointment.referral.present?
                %strong Encaminhamento à Serviços:
                %text{style: "text-align: justify"}= appointment.referral

              %br
              %br

              - if appointment.appointment_guests.any?
                %strong Convidados/Parentes Atendidos:

                - appointment.appointment_guests.each do |guest|
                  = guest.name + ' - ' + guest.description
                  %br

              - if appointment.appointment_students.any?
                - if appointment.appointment_students.count > 1
                  %strong Estudantes Atendidos:
                - else
                  %strong Estudante Atendido:

                - appointment.appointment_students.each do |student|
                  = student.name + ' - ' + student.classy + ' ' + student.groupy
                  %br

              %h3 Comentários e evoluções

              = render "appointment_comments", appointment: appointment

              %br
              %hr
              %br
    %tfoot
      %tr
        %td
          .footer-space  
  .header{style: "background-image: url(#{asset_url('print-header')})"}
  .footer{style: "background-image: url(#{asset_url('print-footer')})"}

- else
  %br
  %br
  = image_tag('brain.png', class: "logo-default logo-default--small")
  %h1.title.title--grey Não há nada disso por aqui...

:javascript
  tinymce.init({
     selector: '.formatable',
     plugins: 'lists media tinydrive',
     toolbar: 'addcomment showcomments code insertfile',
     toolbar_drawer: 'floating',
     tinycomments_mode: 'embedded',
     tinycomments_author: 'Lillyan',
     mode: 'specific_textareas',
     init_instance_callback: function (editor) {
       editor.on('KeyUp', function (e) {
         // Get the HTML contents of the currently active editor
         console.debug(tinyMCE.activeEditor.getContent());
         //method2 getting the content by id of a particular textarea
         var content = tinyMCE.activeEditor.getContent();
         $('#content').empty();
         $('#content').append(content);
       });
     }
  });

  function setVisible(element, op) {
    if (op === "visible") {
      $(element).removeClass('no-print');

      $(element).find('.show')[0].style.display = 'none';
      $(element).find('.hide')[0].style.display = 'unset';
    } else {
      $(element).addClass('no-print');

      $(element).find('.show')[0].style.display = 'unset';
      $(element).find('.hide')[0].style.display = 'none';
    }
  }
